// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User Model
model User {
  user_id   Int    @id @default(autoincrement())
  user_name String @unique
  password  String @unique
  email     String
}

// Doctor Model
model Doctor {
  doctor_id              Int              @id @default(autoincrement())
  doctor_name            String
  doctor_register_number String
  doctor_position        String
  contact                String
  email                  String
  PregnantMothers        PregnantMother[] @relation("DoctorToMother")
  Children               Children[]       @relation("DoctorToChild")
}

// Staff Model
model Staff {
  staff_id Int    @id @default(autoincrement())
  profile  String
  name     String
  contact  String
  address  String
  role     String

  PregnantMothers PregnantMother[] @relation("StaffToMother")
  Children        Children[]       @relation("StaffToChild")
}

// Pregnant Mother Model
model PregnantMother {
  mother_id      Int      @id @default(autoincrement())
  mother_name    String
  mother_age     Int
  mother_address String
  contact        String
  gravidity      Int
  register_date  DateTime
  delivery_date  DateTime
  clinic_date    DateTime

  doctor_id Int?
  Doctor    Doctor? @relation("DoctorToMother", fields: [doctor_id], references: [doctor_id])

  staff_id Int?
  Staff    Staff? @relation("StaffToMother", fields: [staff_id], references: [staff_id])

  VaccineManage  VaccineManageMothers[]
  MedicineManage MedicineManageMothers[]
}

// Children Model
model Children {
  child_id       Int    @id @default(autoincrement())
  child_name     String
  mother_name    String
  contact        String
  address        String
  age            Int
  vaccine_status String

  doctor_id Int?
  Doctor    Doctor? @relation("DoctorToChild", fields: [doctor_id], references: [doctor_id])

  staff_id Int?
  Staff    Staff? @relation("StaffToChild", fields: [staff_id], references: [staff_id])

  VaccineManage  VaccineManageChildren[]
  MedicineManage MedicineManageChildren[]
}

// Medicine Model
model Medicine {
  medicine_id            Int                      @id @default(autoincrement())
  name                   String
  batch_number           String
  brand                  String
  qty                    Int
  date                   DateTime
  MedicineManageChildren MedicineManageChildren[]
  MedicineManageMothers  MedicineManageMothers[]
}

// Vaccine Model
model Vaccine {
  vaccine_id            Int                     @id @default(autoincrement())
  name                  String
  batch_number          String
  brand                 String
  qty                   Int
  date                  DateTime
  VaccineManageChildren VaccineManageChildren[]
  VaccineManageMothers  VaccineManageMothers[]
}

// Vaccine Management for Children
model VaccineManageChildren {
  child_id   Int
  vaccine_id Int
  reason     String
  date       DateTime

  Children Children @relation(fields: [child_id], references: [child_id])
  Vaccine  Vaccine  @relation(fields: [vaccine_id], references: [vaccine_id])

  @@id([child_id, vaccine_id]) // Composite primary key
}

// Medicine Management for Children
model MedicineManageChildren {
  child_id    Int
  medicine_id Int
  reason      String
  date        DateTime

  Children Children @relation(fields: [child_id], references: [child_id])
  Medicine Medicine @relation(fields: [medicine_id], references: [medicine_id])

  @@id([child_id, medicine_id])
}

// Vaccine Management for Pregnant Mothers
model VaccineManageMothers {
  mother_id  Int
  vaccine_id Int
  date       DateTime
  reason     String

  PregnantMother PregnantMother @relation(fields: [mother_id], references: [mother_id])
  Vaccine        Vaccine        @relation(fields: [vaccine_id], references: [vaccine_id])

  @@id([mother_id, vaccine_id])
}

// Medicine Management for Pregnant Mothers
model MedicineManageMothers {
  mother_id   Int
  medicine_id Int
  date        DateTime
  reason      String

  PregnantMother PregnantMother @relation(fields: [mother_id], references: [mother_id])
  Medicine       Medicine       @relation(fields: [medicine_id], references: [medicine_id])

  @@id([mother_id, medicine_id])
}
